# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

on:
  - pull_request
  - push

name: "Continuous Integration"

jobs:
  validate:
    name: "Validate composer"

    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false
      matrix:
        operating-system:
          - "ubuntu-latest"

        php-versions:
          - "7.4"

        dependencies:
          - ""

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.9.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json, opcache"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "none"
          tools: "composer:v2, composer-normalize"

      - name: "Validate composer.json"
        run: "composer validate --strict"

      - name: "Run composer-normalize"
        run: "composer-normalize --dry-run"

  install:
    name: "Check dependencies"

    needs: "validate"

    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-latest"
          - "windows-latest"
          - "macos-latest"

        php-versions:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"

        dependencies:
          - "--prefer-lowest"
          - ""

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.9.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json, opcache"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "none"
          tools: "composer:v2"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction -vv --ansi ${{ matrix.dependencies }}"

      - name: "Check dependencies with composer"
        run: "composer outdated --direct --strict"

  php-cs-fixer:
    name: "Check Coding Standards with PHP-CS-Fixer"

    needs: "install"

    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-latest"

        php-versions:
          - "7.1"

        dependencies:
          - ""

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.9.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json, opcache"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "none"
          tools: "composer:v2, php-cs-fixer"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction -vv --ansi --no-dev ${{ matrix.dependencies }}"

      - name: "Run friendsofphp/php-cs-fixer"
        run: "php-cs-fixer fix --dry-run -vv"

  phpcs:
    name: "Check Coding Standards with PHPCS"

    needs: "install"

    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-latest"

        php-versions:
          - "7.1"

        dependencies:
          - ""

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.9.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json, opcache"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "none"
          tools: "composer:v2, phpcs"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction -vv --ansi --no-dev ${{ matrix.dependencies }}"

      - name: "Run squizlabs/php_codesniffer"
        run: "phpcs --colors"

  phpstan:
    name: "Static Code Analysis with PHPStan"

    needs: "install"

    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-latest"

        php-versions:
          - "7.1"

        dependencies:
          - ""

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.9.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json, opcache"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "none"
          tools: "composer:v2, phpstan"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction -vv --ansi --no-dev ${{ matrix.dependencies }}"

      - name: "Run phpstan/phpstan"
        run: "phpstan analyse -c phpstan.neon --memory-limit=768M --no-progress"

  tests:
    name: "UnitTests with PHPUnit"

    needs: "install"

    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-latest"
          - "windows-latest"
          - "macos-latest"

        php-versions:
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
#          - "8.0"

        dependencies:
          - ""

        phpunit-versions:
          - "7.5.20"

        include:
          - operating-system: "ubuntu-latest"
            php-versions: "7.2"
            phpunit-versions: "8.5.14"
            dependencies: ""
          - operating-system: "ubuntu-latest"
            php-versions: "7.3"
            phpunit-versions: "8.5.14"
            dependencies: ""
          - operating-system: "ubuntu-latest"
            php-versions: "7.4"
            phpunit-versions: "9.5.1"
            dependencies: ""

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.9.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json, opcache"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "none"
          tools: "composer:v2, phpunit:${{ matrix.phpunit-versions }}"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction -vv --ansi --no-dev ${{ matrix.dependencies }}"

      - name: "Run unit tests with phpunit/phpunit"
        run: "phpunit -c phpunit.xml --colors --no-coverage"

  code-coverage:
    name: "Code Coverage"

    needs: "tests"

    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-latest"

        php-versions:
          - "7.1"

        dependencies:
          - ""

        phpunit-versions:
          - "7.5.20"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.9.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json, opcache"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "xdebug"
          tools: "composer:v2, phpunit:${{ matrix.phpunit-versions }}, infection"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction -vv --ansi --no-dev ${{ matrix.dependencies }}"

      - name: "Create cache directory for phpunit/phpunit"
        run: "mkdir -p .build/coverage"

      - name: "Collect code coverage with Xdebug and phpunit/phpunit"
        run: "phpunit -c phpunit.xml --colors --coverage-clover=.build/coverage/clover.xml --coverage-text --coverage-xml=.build/coverage/coverage-xml --log-junit=.build/coverage/phpunit.junit.xml"

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v1.2.1"
        with:
          token: "${{secrets.CODECOV_TOKEN}}"
          file: ".build/coverage/clover.xml"
          flags: "phpunit"

      - name: "Run mutation tests with infection/infection"
        run: "infection --min-covered-msi=95 --min-msi=95 --coverage=.build/coverage"

  integration-tests:
    name: "Integration Tests with PHPUnit"

    needs: "tests"

    runs-on: "${{ matrix.operating-system }}"

    strategy:
      fail-fast: false

      matrix:
        operating-system:
          - "ubuntu-latest"

        php-versions:
          - "7.1"

        dependencies:
          - ""

        phpunit-versions:
          - "7.5.20"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v2.3.4"

      - name: "Install PHP"
        uses: "shivammathur/setup-php@2.9.0"
        with:
          php-version: "${{ matrix.php-versions }}"
          extensions: "json, opcache"
          ini-values: "opcache.enable=1, opcache.enable_cli=1, zend.assertions=1, assert.exception=On"
          coverage: "none"
          tools: "composer:v2, phpunit:${{ matrix.phpunit-versions }}"

      - name: "Update dependencies with composer"
        run: "composer update --optimize-autoloader --prefer-dist --prefer-stable --no-progress --no-interaction -vv --ansi --no-dev ${{ matrix.dependencies }}"

      - name: "Run integration tests with phpunit/phpunit"
        run: "phpunit -c tests/phpunit-integration.xml --no-coverage --colors --verbose"
